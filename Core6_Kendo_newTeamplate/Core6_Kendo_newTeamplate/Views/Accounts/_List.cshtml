@using Kendo.Mvc.UI

@{ 
    string formName = "Accounts";
   
}
<script src="~/lib/NewFolder/libraries/jquery.min.js"></script>
    <script src="~/lib/kendo/js/jszip.min.js"></script>
    <script src="~/lib/kendo/js/kendo.all.min.js"></script>
    <script src="~/lib/kendo/js/kendo.filter.min.js"></script>
    <script src="~/lib/kendo/js/kendo.filtercell.min.js"></script>
    <script src="~/lib/kendo/js/kendo.filtermenu.min.js"></script>
    <script src="~/lib/kendo/js/kendo.all.override.min.js"></script>
    <script src="~/lib/kendo/js/kendo.aspnetmvc.min.js"></script>
      
    <div class="k-rtl ">
    @(Html.Kendo().Grid<Core6_Kendo_newTeamplate.Controllers.AccountCreateOrEditModel>()
        .Name("grid_"+ formName)
        .Columns(columns =>
        {
            columns.Bound("").ClientTemplate("#= renderNumber(data) #")
            .Title("#")
            .Width(40);

            columns.Bound(c => c.Name)
            .Sortable(true)
            .Filterable(true)
            .Width(140);
        })
        .Sortable()
    .Selectable()
    .Events(ev => ev.DataBound("onDataBound"))
    .Scrollable(x => x.Height("auto"))
    .Filterable()
    .HtmlAttributes(new { @class = "" })
                .Pageable(pageable => pageable
        .PageSizes(new[] {  10, 20, 50, 100 })

        .Info(true)
        .Enabled(true)
        .PreviousNext(true)
        .Input(true)
        .Numeric(true)
        .ButtonCount(3)
        .Refresh(true)
        )
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Sort(x => x.Add(y => y.Id).Descending())
            .Read(read => read.Action("Read", formName)/*.Data("GetData")*/)
        )
    )
</div>
